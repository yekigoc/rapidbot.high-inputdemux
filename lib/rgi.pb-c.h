/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_rgi_2eproto__INCLUDED
#define PROTOBUF_C_rgi_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Rgi__Setpwmchan Rgi__Setpwmchan;
typedef struct _Rgi__Setpwmchans Rgi__Setpwmchans;
typedef struct _Rgi__Gpiolineon Rgi__Gpiolineon;
typedef struct _Rgi__Gpiolineoff Rgi__Gpiolineoff;
typedef struct _Rgi__Tellid Rgi__Tellid;
typedef struct _Rgi__Setlock Rgi__Setlock;
typedef struct _Rgi__Setunlock Rgi__Setunlock;
typedef struct _Rgi__Telllocked Rgi__Telllocked;
typedef struct _Rgi__Tellready Rgi__Tellready;
typedef struct _Rgi__Getadcchannel Rgi__Getadcchannel;
typedef struct _Rgi__Tellbatchadc Rgi__Tellbatchadc;
typedef struct _Rgi__Telltime Rgi__Telltime;
typedef struct _Rgi__Telladcchannel Rgi__Telladcchannel;


/* --- enums --- */


/* --- messages --- */

struct  _Rgi__Setpwmchan
{
  ProtobufCMessage base;
  uint32_t channel;
  uint32_t value;
};
#define RGI__SETPWMCHAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__setpwmchan__descriptor) \
    , 0, 0 }


struct  _Rgi__Setpwmchans
{
  ProtobufCMessage base;
  uint32_t value1;
  uint32_t value2;
};
#define RGI__SETPWMCHANS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__setpwmchans__descriptor) \
    , 0, 0 }


struct  _Rgi__Gpiolineon
{
  ProtobufCMessage base;
  uint32_t line;
};
#define RGI__GPIOLINEON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__gpiolineon__descriptor) \
    , 0 }


struct  _Rgi__Gpiolineoff
{
  ProtobufCMessage base;
  uint32_t line;
};
#define RGI__GPIOLINEOFF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__gpiolineoff__descriptor) \
    , 0 }


struct  _Rgi__Tellid
{
  ProtobufCMessage base;
  uint32_t id;
};
#define RGI__TELLID__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__tellid__descriptor) \
    , 0 }


struct  _Rgi__Setlock
{
  ProtobufCMessage base;
  uint32_t lock;
};
#define RGI__SETLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__setlock__descriptor) \
    , 0 }


struct  _Rgi__Setunlock
{
  ProtobufCMessage base;
  uint32_t lock;
};
#define RGI__SETUNLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__setunlock__descriptor) \
    , 0 }


struct  _Rgi__Telllocked
{
  ProtobufCMessage base;
  uint32_t lock;
};
#define RGI__TELLLOCKED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__telllocked__descriptor) \
    , 0 }


struct  _Rgi__Tellready
{
  ProtobufCMessage base;
  uint32_t lock;
};
#define RGI__TELLREADY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__tellready__descriptor) \
    , 0 }


struct  _Rgi__Getadcchannel
{
  ProtobufCMessage base;
  uint32_t channel;
};
#define RGI__GETADCCHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__getadcchannel__descriptor) \
    , 0 }


struct  _Rgi__Tellbatchadc
{
  ProtobufCMessage base;
  uint32_t c0;
  uint32_t c1;
  uint32_t c2;
  uint32_t c3;
  uint32_t c4;
  uint32_t c5;
  uint32_t c6;
  uint32_t c7;
};
#define RGI__TELLBATCHADC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__tellbatchadc__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _Rgi__Telltime
{
  ProtobufCMessage base;
  uint32_t time;
};
#define RGI__TELLTIME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__telltime__descriptor) \
    , 0 }


struct  _Rgi__Telladcchannel
{
  ProtobufCMessage base;
  uint32_t channel;
  uint32_t value;
};
#define RGI__TELLADCCHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rgi__telladcchannel__descriptor) \
    , 0, 0 }


/* Rgi__Setpwmchan methods */
void   rgi__setpwmchan__init
                     (Rgi__Setpwmchan         *message);
size_t rgi__setpwmchan__get_packed_size
                     (const Rgi__Setpwmchan   *message);
size_t rgi__setpwmchan__pack
                     (const Rgi__Setpwmchan   *message,
                      uint8_t             *out);
size_t rgi__setpwmchan__pack_to_buffer
                     (const Rgi__Setpwmchan   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Setpwmchan *
       rgi__setpwmchan__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__setpwmchan__free_unpacked
                     (Rgi__Setpwmchan *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Setpwmchans methods */
void   rgi__setpwmchans__init
                     (Rgi__Setpwmchans         *message);
size_t rgi__setpwmchans__get_packed_size
                     (const Rgi__Setpwmchans   *message);
size_t rgi__setpwmchans__pack
                     (const Rgi__Setpwmchans   *message,
                      uint8_t             *out);
size_t rgi__setpwmchans__pack_to_buffer
                     (const Rgi__Setpwmchans   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Setpwmchans *
       rgi__setpwmchans__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__setpwmchans__free_unpacked
                     (Rgi__Setpwmchans *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Gpiolineon methods */
void   rgi__gpiolineon__init
                     (Rgi__Gpiolineon         *message);
size_t rgi__gpiolineon__get_packed_size
                     (const Rgi__Gpiolineon   *message);
size_t rgi__gpiolineon__pack
                     (const Rgi__Gpiolineon   *message,
                      uint8_t             *out);
size_t rgi__gpiolineon__pack_to_buffer
                     (const Rgi__Gpiolineon   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Gpiolineon *
       rgi__gpiolineon__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__gpiolineon__free_unpacked
                     (Rgi__Gpiolineon *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Gpiolineoff methods */
void   rgi__gpiolineoff__init
                     (Rgi__Gpiolineoff         *message);
size_t rgi__gpiolineoff__get_packed_size
                     (const Rgi__Gpiolineoff   *message);
size_t rgi__gpiolineoff__pack
                     (const Rgi__Gpiolineoff   *message,
                      uint8_t             *out);
size_t rgi__gpiolineoff__pack_to_buffer
                     (const Rgi__Gpiolineoff   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Gpiolineoff *
       rgi__gpiolineoff__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__gpiolineoff__free_unpacked
                     (Rgi__Gpiolineoff *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Tellid methods */
void   rgi__tellid__init
                     (Rgi__Tellid         *message);
size_t rgi__tellid__get_packed_size
                     (const Rgi__Tellid   *message);
size_t rgi__tellid__pack
                     (const Rgi__Tellid   *message,
                      uint8_t             *out);
size_t rgi__tellid__pack_to_buffer
                     (const Rgi__Tellid   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Tellid *
       rgi__tellid__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__tellid__free_unpacked
                     (Rgi__Tellid *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Setlock methods */
void   rgi__setlock__init
                     (Rgi__Setlock         *message);
size_t rgi__setlock__get_packed_size
                     (const Rgi__Setlock   *message);
size_t rgi__setlock__pack
                     (const Rgi__Setlock   *message,
                      uint8_t             *out);
size_t rgi__setlock__pack_to_buffer
                     (const Rgi__Setlock   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Setlock *
       rgi__setlock__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__setlock__free_unpacked
                     (Rgi__Setlock *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Setunlock methods */
void   rgi__setunlock__init
                     (Rgi__Setunlock         *message);
size_t rgi__setunlock__get_packed_size
                     (const Rgi__Setunlock   *message);
size_t rgi__setunlock__pack
                     (const Rgi__Setunlock   *message,
                      uint8_t             *out);
size_t rgi__setunlock__pack_to_buffer
                     (const Rgi__Setunlock   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Setunlock *
       rgi__setunlock__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__setunlock__free_unpacked
                     (Rgi__Setunlock *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Telllocked methods */
void   rgi__telllocked__init
                     (Rgi__Telllocked         *message);
size_t rgi__telllocked__get_packed_size
                     (const Rgi__Telllocked   *message);
size_t rgi__telllocked__pack
                     (const Rgi__Telllocked   *message,
                      uint8_t             *out);
size_t rgi__telllocked__pack_to_buffer
                     (const Rgi__Telllocked   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Telllocked *
       rgi__telllocked__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__telllocked__free_unpacked
                     (Rgi__Telllocked *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Tellready methods */
void   rgi__tellready__init
                     (Rgi__Tellready         *message);
size_t rgi__tellready__get_packed_size
                     (const Rgi__Tellready   *message);
size_t rgi__tellready__pack
                     (const Rgi__Tellready   *message,
                      uint8_t             *out);
size_t rgi__tellready__pack_to_buffer
                     (const Rgi__Tellready   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Tellready *
       rgi__tellready__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__tellready__free_unpacked
                     (Rgi__Tellready *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Getadcchannel methods */
void   rgi__getadcchannel__init
                     (Rgi__Getadcchannel         *message);
size_t rgi__getadcchannel__get_packed_size
                     (const Rgi__Getadcchannel   *message);
size_t rgi__getadcchannel__pack
                     (const Rgi__Getadcchannel   *message,
                      uint8_t             *out);
size_t rgi__getadcchannel__pack_to_buffer
                     (const Rgi__Getadcchannel   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Getadcchannel *
       rgi__getadcchannel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__getadcchannel__free_unpacked
                     (Rgi__Getadcchannel *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Tellbatchadc methods */
void   rgi__tellbatchadc__init
                     (Rgi__Tellbatchadc         *message);
size_t rgi__tellbatchadc__get_packed_size
                     (const Rgi__Tellbatchadc   *message);
size_t rgi__tellbatchadc__pack
                     (const Rgi__Tellbatchadc   *message,
                      uint8_t             *out);
size_t rgi__tellbatchadc__pack_to_buffer
                     (const Rgi__Tellbatchadc   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Tellbatchadc *
       rgi__tellbatchadc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__tellbatchadc__free_unpacked
                     (Rgi__Tellbatchadc *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Telltime methods */
void   rgi__telltime__init
                     (Rgi__Telltime         *message);
size_t rgi__telltime__get_packed_size
                     (const Rgi__Telltime   *message);
size_t rgi__telltime__pack
                     (const Rgi__Telltime   *message,
                      uint8_t             *out);
size_t rgi__telltime__pack_to_buffer
                     (const Rgi__Telltime   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Telltime *
       rgi__telltime__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__telltime__free_unpacked
                     (Rgi__Telltime *message,
                      ProtobufCAllocator *allocator);
/* Rgi__Telladcchannel methods */
void   rgi__telladcchannel__init
                     (Rgi__Telladcchannel         *message);
size_t rgi__telladcchannel__get_packed_size
                     (const Rgi__Telladcchannel   *message);
size_t rgi__telladcchannel__pack
                     (const Rgi__Telladcchannel   *message,
                      uint8_t             *out);
size_t rgi__telladcchannel__pack_to_buffer
                     (const Rgi__Telladcchannel   *message,
                      ProtobufCBuffer     *buffer);
Rgi__Telladcchannel *
       rgi__telladcchannel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rgi__telladcchannel__free_unpacked
                     (Rgi__Telladcchannel *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Rgi__Setpwmchan_Closure)
                 (const Rgi__Setpwmchan *message,
                  void *closure_data);
typedef void (*Rgi__Setpwmchans_Closure)
                 (const Rgi__Setpwmchans *message,
                  void *closure_data);
typedef void (*Rgi__Gpiolineon_Closure)
                 (const Rgi__Gpiolineon *message,
                  void *closure_data);
typedef void (*Rgi__Gpiolineoff_Closure)
                 (const Rgi__Gpiolineoff *message,
                  void *closure_data);
typedef void (*Rgi__Tellid_Closure)
                 (const Rgi__Tellid *message,
                  void *closure_data);
typedef void (*Rgi__Setlock_Closure)
                 (const Rgi__Setlock *message,
                  void *closure_data);
typedef void (*Rgi__Setunlock_Closure)
                 (const Rgi__Setunlock *message,
                  void *closure_data);
typedef void (*Rgi__Telllocked_Closure)
                 (const Rgi__Telllocked *message,
                  void *closure_data);
typedef void (*Rgi__Tellready_Closure)
                 (const Rgi__Tellready *message,
                  void *closure_data);
typedef void (*Rgi__Getadcchannel_Closure)
                 (const Rgi__Getadcchannel *message,
                  void *closure_data);
typedef void (*Rgi__Tellbatchadc_Closure)
                 (const Rgi__Tellbatchadc *message,
                  void *closure_data);
typedef void (*Rgi__Telltime_Closure)
                 (const Rgi__Telltime *message,
                  void *closure_data);
typedef void (*Rgi__Telladcchannel_Closure)
                 (const Rgi__Telladcchannel *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor rgi__setpwmchan__descriptor;
extern const ProtobufCMessageDescriptor rgi__setpwmchans__descriptor;
extern const ProtobufCMessageDescriptor rgi__gpiolineon__descriptor;
extern const ProtobufCMessageDescriptor rgi__gpiolineoff__descriptor;
extern const ProtobufCMessageDescriptor rgi__tellid__descriptor;
extern const ProtobufCMessageDescriptor rgi__setlock__descriptor;
extern const ProtobufCMessageDescriptor rgi__setunlock__descriptor;
extern const ProtobufCMessageDescriptor rgi__telllocked__descriptor;
extern const ProtobufCMessageDescriptor rgi__tellready__descriptor;
extern const ProtobufCMessageDescriptor rgi__getadcchannel__descriptor;
extern const ProtobufCMessageDescriptor rgi__tellbatchadc__descriptor;
extern const ProtobufCMessageDescriptor rgi__telltime__descriptor;
extern const ProtobufCMessageDescriptor rgi__telladcchannel__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_rgi_2eproto__INCLUDED */
